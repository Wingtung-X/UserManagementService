name: user-services-github-action
on:
  pull_request:
    branches:
      - main
      - feature/*

jobs:
  pre-check:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: 123
          POSTGRES_USER: db
          POSTGRES_DB: cloud_computing
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Create application.properties
        run: |
          echo "Creating application.properties"
          cat <<EOT > src/main/resources/application.properties
          spring.application.name=CloudComputing
            
          # Data source
          spring.datasource.url=jdbc:postgresql://localhost:5432/cloud_computing
          spring.datasource.username=db
          spring.datasource.password=123
            
          # JPA config
          spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
          spring.jpa.hibernate.ddl-auto=update

          # S3 config
            aws.s3.bucket.name=yingtong-test-webapp-bucket
            
            # logs
            logging.file.path=logs
            logging.file.name=csye6225.log
            
            #aws
            cloud.aws.credentials.profile=default
            cloud.aws.region.static=us-west-2
            
            #aws.region=us-west-2
            #aws.profile=dev
            
            
            
            spring.servlet.multipart.enabled=true
            spring.servlet.multipart.max-file-size=10MB
            spring.servlet.multipart.max-request-size=10MB
            
            management.metrics.export.cloudwatch.namespace=Test5
            management.metrics.export.cloudwatch.step=5s
            
            logging.level.io.micrometer=DEBUG
            logging.level.org.springframework.cloud=DEBUG
            
            # cw
            #CLOUDWATCH_NAMESPACE=Test6
            #METRICS_ENABLED=true
            management.metrics.enable.jvm=false
            management.metrics.enable.system=false
            management.metrics.enable.logback=false
            management.metrics.enable.spring=false
            management.metrics.enable.process=false
            management.metrics.enable.hikaricp=false
          
            #domain for verification email
            aws.sns.topicArn=arn:aws:sns:us-west-2:529088267820:yingtong_test
          EOT

      - name: Display properties file
        run: cat src/main/resources/application.properties

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-west-2

      - name: Check PostgreSQL database and user
        run: |
          for i in {1..10}; do
            if psql -h localhost -U db -d cloud_computing -c '\q'; then
              echo "PostgreSQL is ready and accessible"
              break
            else
              echo "Waiting for PostgreSQL to be ready..."
              sleep 5
            fi
          done
        env:
          PGPASSWORD: 123

      - name: Build and run all tests
        run: mvn test
